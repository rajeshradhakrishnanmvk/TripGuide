using Microsoft.Extensions.Configuration;
using Microsoft.SemanticKernel;
using Microsoft.SemanticKernel.AudioToText;
using Microsoft.SemanticKernel.Connectors.OpenAI;
using Microsoft.SemanticKernel.TextToAudio;

 const string TextToAudioModel = "tts-1";
//  const string AudioToTextModel = "whisper-1";
//  const string AudioFilename = "test_audio.wav";
 const string AudioFilePath = "jpn-audio.wav-001";

var (useAzureOpenAI, model, azureEndpoint, apiKey, orgId) = Settings.LoadFromFile();
var config = new ConfigurationBuilder()
                                    .AddInMemoryCollection(new Dictionary<string, string>
                                    {
                                        { "OpenAI:Model", model },
                                        { "OpenAI:ApiKey", apiKey },
                                        { "OpenAI:OrgId", orgId }
                                    })
                                    .Build();

var builder = Kernel.CreateBuilder();
//#pragma warning disable SKEXP0001 
builder.AddOpenAITextToAudio(
                                modelId: TextToAudioModel,
                                apiKey: config["OpenAI:ApiKey"]);


var kernel = builder.Build();

var textToAudioService = kernel.GetRequiredService<ITextToAudioService>();

string sampleText = "はい、どちらさまですか？。よんひゃくはちごうしつのほせ さんとすです。はじめまして、ほせ さんとすです。ひっこしてきたばかりです。どうぞよろしくおねがいします。こちらこそ、はじめまして。";

// Set execution settings (optional)
OpenAITextToAudioExecutionSettings executionSettings = new()
{
    Voice = "alloy", // The voice to use when generating the audio.
                        // Supported voices are alloy, echo, fable, onyx, nova, and shimmer.
    ResponseFormat = "mp3", // The format to audio in.
                            // Supported formats are mp3, opus, aac, and flac.
    Speed = 1.0f // The speed of the generated audio.
                    // Select a value from 0.25 to 4.0. 1.0 is the default.
};

// Convert text to audio
AudioContent audioContent = await textToAudioService.GetAudioContentAsync(sampleText, executionSettings);

// Save audio content to a file
await File.WriteAllBytesAsync(AudioFilePath, audioContent?.Data?.ToArray());